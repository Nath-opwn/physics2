version: '3.8'

services:
  # API服务
  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
      - minio
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/fluidlab
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
    networks:
      - fluidlab-net

  # Celery Worker服务
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_worker.celery_app worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - api
      - redis
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/fluidlab
      - REDIS_HOST=redis
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
    networks:
      - fluidlab-net

  # PostgreSQL数据库
  postgres:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=fluidlab
    ports:
      - "5432:5432"
    networks:
      - fluidlab-net

  # Redis缓存和消息队列
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - fluidlab-net

  # MinIO对象存储
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    command: server /data --console-address ":9001"
    networks:
      - fluidlab-net

volumes:
  postgres_data:
  minio_data:

networks:
  fluidlab-net:
    driver: bridge 